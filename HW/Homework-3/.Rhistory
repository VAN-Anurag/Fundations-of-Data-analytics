# These are the column names relevant to shoage
columns_to_convert <- column_names[c(66:69)]
# Group and count number of providers by state
state_with_count <- df_covid_nursing %>%
group_by(provider_state) %>%
summarize(count_of_providers = n_distinct(federal_provider_number))
ind <- 1
for (col_name in columns_to_convert) {
# Filter all values where current column is missing for more than 20 weeks, counting number of federal providers per state that faced shortages
temp <- df_covid_nursing %>%
filter(df_covid_nursing[col_name] == "Y") %>%
group_by(provider_state, federal_provider_number) %>%
summarize(count_of_shortage = n()) %>%
filter(count_of_shortage >= 20) %>%
group_by(provider_state) %>%
summarize(count_of_missing = n())
# Join this with state facility count table
joined_temp <- inner_join(state_with_count, temp, by = "provider_state")
# Calculate shortage percentage
joined_temp$shortage_percent <- (joined_temp$count_of_missing / joined_temp$count_of_providers) * 100
# Dynamically assign in new variable
assign(paste("table", col_name, sep = "_"), joined_temp)
# Increment index by one for next variable
ind <- ind + 1
}
# After manual inspection of nursing staff table, a threshhold where the states faced a shortage of nursing staff can be concluded as 25% or above
table_shortage_of_nursing_staff_25 <- table_shortage_of_nursing_staff[table_shortage_of_nursing_staff$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of clinical staff table, a threshold is hard to come up with. The maximum shortage faced is 5% while minimum is 0.8%. However, since clinical staff is critical, we have taken a threshold of 3% to count a shortage
table_shortage_of_clinical_staff_3 <- table_shortage_of_clinical_staff[table_shortage_of_clinical_staff$shortage_percent >= 3, ] %>% arrange(shortage_percent)
# After manual inspection of aides  table, a threshhold where the states faced a shortage of nursing staff can be concluded as 25% or above
table_shortage_of_aides_20 <- table_shortage_of_aides[table_shortage_of_aides$shortage_percent >= 20, ] %>% arrange(shortage_percent)
# After manual inspection of other staff table, a threshold where the states faced a shortage of other staff can be concluded as 20% or above
table_shortage_of_other_staff_20 <- table_shortage_of_other_staff[table_shortage_of_other_staff$shortage_percent >= 20, ] %>% arrange(shortage_percent)
barplot(table_shortage_of_nursing_staff_25$shortage_percent, main = "Shortage of nursing staff for >= 20 week, 25% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_nursing_staff_25$provider_state, cex.names = 0.6)
barplot(table_shortage_of_clinical_staff_3$shortage_percent, main = "Shortage of clinical staff for >=20 weeks, 3% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_clinical_staff_3$provider_state)
barplot(table_shortage_of_aides_20$shortage_percent, main = "Shortage of Aides staff for more than 20 weeks, 20% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_aides_20$provider_state, cex.names = 0.4)
barplot(table_shortage_of_other_staff_20$shortage_percent, main = "Shortage of other staff for more than 20 weeks, 20% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_other_staff_20$provider_state, cex.names = 0.6)
## Filter the data and select only relevant columns
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_state", "shortage_of_nursing_staff", "shortage_of_clinical_staff", "shortage_of_aides", "shortage_of_other_staff")]
col_names <- c("shortage_of_nursing_staff", "shortage_of_clinical_staff", "shortage_of_aides", "shortage_of_other_staff")
## Select the threshold which will be used to nursing homes in a state eligible to be considered for shortage (this threshold has been manually selected from the histogram we have produced below)
threshold <- c(30, 5, 30, 20)
for (i in 1:length(col_names)) {
## Find total number of nursing homes for each state
state_nursing_home_count <- covid_df %>%
group_by(provider_state) %>%
summarise(count = n_distinct(federal_provider_number)) %>%
drop_na()
## Filter and get all nursing homes with shortage in a week
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "Y")
## Groupby to get the number of nursing homes having a shortage in a state in a week
shortage_week_df <- shortage_week_df %>%
group_by(provider_state, week_ending) %>%
summarise(count = n()) %>%
drop_na()
## Merge the above 2 dataframe and find the % of nursing homes with shortage in a state in a week
merged_df <- merge(shortage_week_df, state_nursing_home_count, by = c("provider_state"))
merged_df$Percentage <- (merged_df$count.x / merged_df$count.y) * 100
# hist(merged_df$Percentage, main = paste("Plot for ",col_names[i]),xlab = "Percentage", ylab="Frequency of shortage weeks" )
## Filter and get the data of only those states in which has a certain (above set threshold) % of nursing homes with shortage. For eg. in state AK, in week 2021-08-01, the % of N.H. having shortage is 30%, and since the threshold is 25% for "shortage_of_nursing_staff", we will consider this week as shortage or the state AK.
merged_df <- merged_df[(merged_df$Percentage >= threshold[i]), ]
merged_df1 <- merged_df %>%
group_by(provider_state) %>%
summarise(count_of_weeks = n())
## Find number of states having shortage of nursing staff for more than 20 weeks
answer <- merged_df1[(merged_df1$count_of_weeks > 20), ]
answer <- answer[order(answer$count_of_weeks, decreasing = TRUE), ]
colnames(answer) <- c("Provider_State", paste("Count_of_weeks_with_shortage_of", col_names[i], sep = "_"))
print(head(answer, 5))
}
# Used to identify the columns relavant to the data
column_names <- names(df_covid_nursing)
# columns relevant for analysis
relevant_columns <- column_names[c(70, 72, 74, 76, 78, 80)]
# Group and count number of providers by county
county_with_count <- df_covid_nursing %>%
group_by(provider_state, county) %>%
summarize(count_of_providers = n_distinct(federal_provider_number))
ind <- 1
for (col_name in relevant_columns) {
# Filter all values where current column is missing for more than 10 weeks, counting number of federal providers per county that faced shortages
temp <- df_covid_nursing %>%
filter(df_covid_nursing[col_name] == "N") %>%
group_by(provider_state, county, federal_provider_number) %>%
summarize(count_of_shortage = n()) %>%
filter(count_of_shortage >= 10) %>%
group_by(provider_state, county) %>%
summarize(count_of_missing = n())
# Join this with state facility count table
joined_temp <- inner_join(county_with_count, temp, by = c("provider_state", "county"))
# Calculate shortage percentage
joined_temp$shortage_percent <- (joined_temp$count_of_missing / joined_temp$count_of_providers) * 100
# Dynamically assign in new variable
assign(paste("table", col_name, sep = "_"), joined_temp)
# Increment index by one for next variable
ind <- ind + 1
}
# After manual inspection of N95 mask table, a threshold where the counties faced a shortage of N95 masks can be concluded as 25% or above (1/4th of facilities) had a shortage >= 10 weeks
table_any_current_supply_of_n95_masks_25 <- table_any_current_supply_of_n95_masks[table_any_current_supply_of_n95_masks$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of surgical mask table, a threshold where the counties faced a shortage of surgical masks can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_surgical_masks_25 <- table_any_current_supply_of_surgical_masks[table_any_current_supply_of_surgical_masks$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Eye protection table, a threshold where the counties faced a shortage of Eye protection can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_eye_protection_25 <- table_any_current_supply_of_eye_protection[table_any_current_supply_of_eye_protection$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Gowns table, a threshold where the counties faced a shortage of Gowns can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_gowns_25 <- table_any_current_supply_of_gowns[table_any_current_supply_of_gowns$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Gloves table, a threshold where the counties faced a shortage of Gloves can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_gloves_25 <- table_any_current_supply_of_gloves[table_any_current_supply_of_gloves$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Hand Sanitizer table, a threshold where the counties faced a shortage of Hand Sanitizer can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_hand_sanitizer_25 <- table_any_current_supply_of_hand_sanitizer[table_any_current_supply_of_hand_sanitizer$shortage_percent >= 25, ] %>% arrange(shortage_percent)
AL_counties_shortage <- table_any_current_supply_of_n95_masks_25[(table_any_current_supply_of_n95_masks_25$provider_state == "AL"), ]
barplot(AL_counties_shortage$shortage_percent, main = "Shortage of N95 masks for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage$county, cex.names = 0.5)
AL_counties_shortage_surgical <- table_any_current_supply_of_surgical_masks_25[(table_any_current_supply_of_surgical_masks_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_surgical$shortage_percent, main = "Shortage of surgical masks for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_surgical$county, cex.names = 0.5)
AL_counties_shortage_eye_protection <- table_any_current_supply_of_eye_protection_25[(table_any_current_supply_of_eye_protection_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_eye_protection$shortage_percent, main = "Shortage of eye protection for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_surgical$county, cex.names = 0.5)
AL_counties_shortage_gowns <- table_any_current_supply_of_gowns_25[(table_any_current_supply_of_gowns_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_gowns$shortage_percent, main = "Shortage of Gowns for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_gowns$county, cex.names = 0.5)
MN_counties_shortage_gloves <- table_any_current_supply_of_gloves_25[(table_any_current_supply_of_gloves_25$provider_state == "MN"), ]
barplot(MN_counties_shortage_gloves$shortage_percent, main = "Shortage of Gloves for >= 10 weeks in Minnesota", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = MN_counties_shortage_gloves$county, cex.names = 0.5)
MN_counties_shortage_hand_sanitizer <- table_any_current_supply_of_hand_sanitizer_25[(table_any_current_supply_of_hand_sanitizer_25$provider_state == "MN"), ]
barplot(MN_counties_shortage_hand_sanitizer$shortage_percent, main = "Shortage of hand sanitizer for >= 10 weeks in Minnesota", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = MN_counties_shortage_hand_sanitizer$county, cex.names = 0.5)
## Filter the data and select only relevant columns
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_state", "county", "any_current_supply_of_eye_protection", "any_current_supply_of_n95_masks", "any_current_supply_of_surgical_masks", "any_current_supply_of_gowns", "any_current_supply_of_gloves", "any_current_supply_of_hand_sanitizer")]
col_names <- c("any_current_supply_of_eye_protection", "any_current_supply_of_n95_masks", "any_current_supply_of_surgical_masks", "any_current_supply_of_gowns", "any_current_supply_of_gloves", "any_current_supply_of_hand_sanitizer")
## Select the threshold which will be used to nursing homes in a state-county eligible to be considered for shortage (this threshold has been manually selected from the histogram we have produced below)
threshold <- c(40, 40, 40, 40, 40, 40)
for (i in 1:length(col_names)) {
## Find total number of nursing homes for each state-county
state_nursing_home_count <- covid_df %>%
group_by(provider_state, county) %>%
summarise(count = n_distinct(federal_provider_number)) %>%
drop_na()
## Filter and get all nursing homes with shortage in a week
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "N")
## Groupby to get the number of nursing homes having a shortage in a state-county in a week
shortage_week_df <- shortage_week_df %>%
group_by(provider_state, county, week_ending) %>%
summarise(count = n()) %>%
drop_na()
## Merge the above 2 dataframe and find the % of nursing homes with shortage in a state in a week
merged_df <- merge(shortage_week_df, state_nursing_home_count, by = c("provider_state", "county"))
merged_df$Percentage <- (merged_df$count.x / merged_df$count.y) * 100
## Plot the histogram
# hist(merged_df$Percentage, main = paste("Plot for",col_names[i]), xlab = "Percentage", ylab="Frequency of shotage weeks")
## Filter and get the data of only those states in which has a certain (above set threshold) % of nursing homes with shortage. For eg. in county AK-Anchorage, in week 2020-05-24, the % of N.H. having shortage is 100%, and since the threshold is 50% for "any_current_supply_of_eye_protection", we will consider this week as shortage or the county AK-Anchorage.
merged_df <- merged_df[(merged_df$Percentage >= threshold[i]), ]
merged_df1 <- merged_df %>%
group_by(provider_state, county) %>%
summarise(count_of_weeks = n())
## find counties having shortage of nursing staff for more than 10 weeks
answer <- merged_df1[(merged_df1$count_of_weeks > 10), ]
answer <- answer[order(answer$count_of_weeks, decreasing = TRUE), ]
colnames(answer) <- c("Provider_State", "County", paste("Count_of_weeks_with_shortage_of", col_names[i], sep = "_"))
print(head(answer, 5))
}
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_name", "provider_state", "county", "any_current_supply_of_ventilator_supplies")]
col_names <- c("any_current_supply_of_ventilator_supplies")
for (i in 1:length(col_names)) {
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "N")
shortage_week_df <- shortage_week_df %>%
group_by(federal_provider_number, provider_name) %>%
summarise(number_of_shortage_weeks = n()) %>%
drop_na()
## find counties having shortage of ventilator supplies for more than 10 weeks
answer <- shortage_week_df[(shortage_week_df$number_of_shortage_weeks > 10), ]
answer <- answer[order(answer$number_of_shortage_weeks, decreasing = TRUE), ]
print(head(answer, 5))
}
library(tinytex)
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# Loading libraries
library(lubridate)
library(stringr)
library(dplyr)
library(readr)
library(dlookr)
library(tidyr)
library(ggplot2)
tinytex::install_tinytex()
# Loading dataset
df_covid_nursing <- read_csv("Covid_19_data.csv")
knitr::opts_chunk$set(echo = TRUE)
# Loading libraries
library(lubridate)
library(stringr)
library(dplyr)
library(readr)
library(dlookr)
library(tidyr)
library(ggplot2)
tinytex::install_tinytex()
gc()
knitr::opts_chunk$set(echo = TRUE)
# Loading libraries
library(lubridate)
library(stringr)
library(dplyr)
library(readr)
library(dlookr)
library(tidyr)
library(ggplot2)
# Loading dataset
df_covid_nursing <- read_csv("Covid_19_data.csv")
n_vec <- c(1000, 10000, 1000000, 10000000)
df <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(df) <- c("Number", "For_Loop", "Vector")
for (n in n_vec) {
x <- 1:n
## Use of for loop
t1 <- Sys.time()
for (i in 1:length(x)) {
x[i] <- x[i] * 2
}
t2 <- Sys.time()
## Vector
t3 <- Sys.time()
x <- x * 2
t4 <- Sys.time()
## calculate difference and store in variables
diff1 <- t2 - t1
diff2 <- t4 - t3
## store both time difference variables in data frame prepared above
df[nrow(df) + 1, ] <- c(as.character(n), diff1, diff2)
}
## Pivot the data to get the both the types in a single column
df_longer <- df %>%
pivot_longer(c("For_Loop", "Vector"), names_to = "Type", values_to = "Time")
print(df_longer)
## Plot the line plot
ggplot(data = df_longer, aes(x = Number, y = Time, group = Type, color = Type)) +
geom_line() +
xlab("Number of data points") +
ylab("Time in ms")
get_sample_data <- function(df, n = 1000) {
# Check if n is supplied a numeric value
if (!is.numeric(n)) {
stop("Value of n must be numeric")
}
# Get number of rows dataframe
rows_in_df <- dim(df)[1]
# If we have lesser values in dataframe than sample, throw error
if (rows_in_df < n) {
stop("Must have >= n values in data frame")
}
if (n <= 0) {
stop("N must be positive and > 0")
}
# Sample rows to return values
rows_idx <- floor(runif(n, 1, n))
# Return sampled dataframe
return(df[rows_idx, ])
}
num <- readline("Please enter a number:")
num <- as.integer(num)
if ((is.na(num)) || (!is.numeric(num))) {
print("Please enter a valid  number.")
} else {
answer_2 <- get_sample_data(df_covid_nursing, num)
head(answer_2, 5)
}
print(paste0("The rows in the dataframe before filter ", dim(df_covid_nursing)[1]))
df_covid_nursing <- df_covid_nursing[(df_covid_nursing$passed_quality_assurance_check == "Y"), ]
print(paste0("The shape of dataframe after filter ", dim(df_covid_nursing)[1]))
answer1 <- df_covid_nursing %>%
group_by(provider_state) %>%
summarise(count = n_distinct(federal_provider_number))
answer1[order(answer1$count, decreasing = T), ]
answer2 <- df_covid_nursing %>%
group_by(provider_state, county) %>%
summarise(count = n_distinct(federal_provider_number))
head(answer2[order(answer2$count, decreasing = T), ], 5)
# Used to identify the columns relavant to the data
column_names <- names(df_covid_nursing)
# These are the column names relevant to shoage
columns_to_convert <- column_names[c(66:69)]
# Group and count number of providers by state
state_with_count <- df_covid_nursing %>%
group_by(provider_state) %>%
summarize(count_of_providers = n_distinct(federal_provider_number))
ind <- 1
for (col_name in columns_to_convert) {
# Filter all values where current column is missing for more than 20 weeks, counting number of federal providers per state that faced shortages
temp <- df_covid_nursing %>%
filter(df_covid_nursing[col_name] == "Y") %>%
group_by(provider_state, federal_provider_number) %>%
summarize(count_of_shortage = n()) %>%
filter(count_of_shortage >= 20) %>%
group_by(provider_state) %>%
summarize(count_of_missing = n())
# Join this with state facility count table
joined_temp <- inner_join(state_with_count, temp, by = "provider_state")
# Calculate shortage percentage
joined_temp$shortage_percent <- (joined_temp$count_of_missing / joined_temp$count_of_providers) * 100
# Dynamically assign in new variable
assign(paste("table", col_name, sep = "_"), joined_temp)
# Increment index by one for next variable
ind <- ind + 1
}
# After manual inspection of nursing staff table, a threshhold where the states faced a shortage of nursing staff can be concluded as 25% or above
table_shortage_of_nursing_staff_25 <- table_shortage_of_nursing_staff[table_shortage_of_nursing_staff$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of clinical staff table, a threshold is hard to come up with. The maximum shortage faced is 5% while minimum is 0.8%. However, since clinical staff is critical, we have taken a threshold of 3% to count a shortage
table_shortage_of_clinical_staff_3 <- table_shortage_of_clinical_staff[table_shortage_of_clinical_staff$shortage_percent >= 3, ] %>% arrange(shortage_percent)
# After manual inspection of aides  table, a threshhold where the states faced a shortage of nursing staff can be concluded as 25% or above
table_shortage_of_aides_20 <- table_shortage_of_aides[table_shortage_of_aides$shortage_percent >= 20, ] %>% arrange(shortage_percent)
# After manual inspection of other staff table, a threshold where the states faced a shortage of other staff can be concluded as 20% or above
table_shortage_of_other_staff_20 <- table_shortage_of_other_staff[table_shortage_of_other_staff$shortage_percent >= 20, ] %>% arrange(shortage_percent)
barplot(table_shortage_of_nursing_staff_25$shortage_percent, main = "Shortage of nursing staff for >= 20 week, 25% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_nursing_staff_25$provider_state, cex.names = 0.6)
barplot(table_shortage_of_clinical_staff_3$shortage_percent, main = "Shortage of clinical staff for >=20 weeks, 3% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_clinical_staff_3$provider_state)
barplot(table_shortage_of_aides_20$shortage_percent, main = "Shortage of Aides staff for more than 20 weeks, 20% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_aides_20$provider_state, cex.names = 0.4)
barplot(table_shortage_of_other_staff_20$shortage_percent, main = "Shortage of other staff for more than 20 weeks, 20% threshold", xlab = "State", ylab = "Percentage shortage", col = "red", names.arg = table_shortage_of_other_staff_20$provider_state, cex.names = 0.6)
## Filter the data and select only relevant columns
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_state", "shortage_of_nursing_staff", "shortage_of_clinical_staff", "shortage_of_aides", "shortage_of_other_staff")]
col_names <- c("shortage_of_nursing_staff", "shortage_of_clinical_staff", "shortage_of_aides", "shortage_of_other_staff")
## Select the threshold which will be used to nursing homes in a state eligible to be considered for shortage (this threshold has been manually selected from the histogram we have produced below)
threshold <- c(30, 5, 30, 20)
for (i in 1:length(col_names)) {
## Find total number of nursing homes for each state
state_nursing_home_count <- covid_df %>%
group_by(provider_state) %>%
summarise(count = n_distinct(federal_provider_number)) %>%
drop_na()
## Filter and get all nursing homes with shortage in a week
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "Y")
## Groupby to get the number of nursing homes having a shortage in a state in a week
shortage_week_df <- shortage_week_df %>%
group_by(provider_state, week_ending) %>%
summarise(count = n()) %>%
drop_na()
## Merge the above 2 dataframe and find the % of nursing homes with shortage in a state in a week
merged_df <- merge(shortage_week_df, state_nursing_home_count, by = c("provider_state"))
merged_df$Percentage <- (merged_df$count.x / merged_df$count.y) * 100
# hist(merged_df$Percentage, main = paste("Plot for ",col_names[i]),xlab = "Percentage", ylab="Frequency of shortage weeks" )
## Filter and get the data of only those states in which has a certain (above set threshold) % of nursing homes with shortage. For eg. in state AK, in week 2021-08-01, the % of N.H. having shortage is 30%, and since the threshold is 25% for "shortage_of_nursing_staff", we will consider this week as shortage or the state AK.
merged_df <- merged_df[(merged_df$Percentage >= threshold[i]), ]
merged_df1 <- merged_df %>%
group_by(provider_state) %>%
summarise(count_of_weeks = n())
## Find number of states having shortage of nursing staff for more than 20 weeks
answer <- merged_df1[(merged_df1$count_of_weeks > 20), ]
answer <- answer[order(answer$count_of_weeks, decreasing = TRUE), ]
colnames(answer) <- c("Provider_State", paste("Count_of_weeks_with_shortage_of", col_names[i], sep = "_"))
print(head(answer, 5))
}
# Used to identify the columns relavant to the data
column_names <- names(df_covid_nursing)
# columns relevant for analysis
relevant_columns <- column_names[c(70, 72, 74, 76, 78, 80)]
# Group and count number of providers by county
county_with_count <- df_covid_nursing %>%
group_by(provider_state, county) %>%
summarize(count_of_providers = n_distinct(federal_provider_number))
ind <- 1
for (col_name in relevant_columns) {
# Filter all values where current column is missing for more than 10 weeks, counting number of federal providers per county that faced shortages
temp <- df_covid_nursing %>%
filter(df_covid_nursing[col_name] == "N") %>%
group_by(provider_state, county, federal_provider_number) %>%
summarize(count_of_shortage = n()) %>%
filter(count_of_shortage >= 10) %>%
group_by(provider_state, county) %>%
summarize(count_of_missing = n())
# Join this with state facility count table
joined_temp <- inner_join(county_with_count, temp, by = c("provider_state", "county"))
# Calculate shortage percentage
joined_temp$shortage_percent <- (joined_temp$count_of_missing / joined_temp$count_of_providers) * 100
# Dynamically assign in new variable
assign(paste("table", col_name, sep = "_"), joined_temp)
# Increment index by one for next variable
ind <- ind + 1
}
# After manual inspection of N95 mask table, a threshold where the counties faced a shortage of N95 masks can be concluded as 25% or above (1/4th of facilities) had a shortage >= 10 weeks
table_any_current_supply_of_n95_masks_25 <- table_any_current_supply_of_n95_masks[table_any_current_supply_of_n95_masks$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of surgical mask table, a threshold where the counties faced a shortage of surgical masks can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_surgical_masks_25 <- table_any_current_supply_of_surgical_masks[table_any_current_supply_of_surgical_masks$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Eye protection table, a threshold where the counties faced a shortage of Eye protection can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_eye_protection_25 <- table_any_current_supply_of_eye_protection[table_any_current_supply_of_eye_protection$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Gowns table, a threshold where the counties faced a shortage of Gowns can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_gowns_25 <- table_any_current_supply_of_gowns[table_any_current_supply_of_gowns$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Gloves table, a threshold where the counties faced a shortage of Gloves can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_gloves_25 <- table_any_current_supply_of_gloves[table_any_current_supply_of_gloves$shortage_percent >= 25, ] %>% arrange(shortage_percent)
# After manual inspection of Hand Sanitizer table, a threshold where the counties faced a shortage of Hand Sanitizer can be concluded as 25% or above (1/4th of facilities in a county) had a shortage >= 10 weeks
table_any_current_supply_of_hand_sanitizer_25 <- table_any_current_supply_of_hand_sanitizer[table_any_current_supply_of_hand_sanitizer$shortage_percent >= 25, ] %>% arrange(shortage_percent)
AL_counties_shortage <- table_any_current_supply_of_n95_masks_25[(table_any_current_supply_of_n95_masks_25$provider_state == "AL"), ]
barplot(AL_counties_shortage$shortage_percent, main = "Shortage of N95 masks for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage$county, cex.names = 0.5)
AL_counties_shortage_surgical <- table_any_current_supply_of_surgical_masks_25[(table_any_current_supply_of_surgical_masks_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_surgical$shortage_percent, main = "Shortage of surgical masks for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_surgical$county, cex.names = 0.5)
AL_counties_shortage_eye_protection <- table_any_current_supply_of_eye_protection_25[(table_any_current_supply_of_eye_protection_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_eye_protection$shortage_percent, main = "Shortage of eye protection for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_surgical$county, cex.names = 0.5)
AL_counties_shortage_gowns <- table_any_current_supply_of_gowns_25[(table_any_current_supply_of_gowns_25$provider_state == "AL"), ]
barplot(AL_counties_shortage_gowns$shortage_percent, main = "Shortage of Gowns for >= 10 weeks in Alabama", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = AL_counties_shortage_gowns$county, cex.names = 0.5)
MN_counties_shortage_gloves <- table_any_current_supply_of_gloves_25[(table_any_current_supply_of_gloves_25$provider_state == "MN"), ]
barplot(MN_counties_shortage_gloves$shortage_percent, main = "Shortage of Gloves for >= 10 weeks in Minnesota", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = MN_counties_shortage_gloves$county, cex.names = 0.5)
MN_counties_shortage_hand_sanitizer <- table_any_current_supply_of_hand_sanitizer_25[(table_any_current_supply_of_hand_sanitizer_25$provider_state == "MN"), ]
barplot(MN_counties_shortage_hand_sanitizer$shortage_percent, main = "Shortage of hand sanitizer for >= 10 weeks in Minnesota", xlab = "Counties", ylab = "Percentage shortage", col = "red", names.arg = MN_counties_shortage_hand_sanitizer$county, cex.names = 0.5)
## Filter the data and select only relevant columns
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_state", "county", "any_current_supply_of_eye_protection", "any_current_supply_of_n95_masks", "any_current_supply_of_surgical_masks", "any_current_supply_of_gowns", "any_current_supply_of_gloves", "any_current_supply_of_hand_sanitizer")]
col_names <- c("any_current_supply_of_eye_protection", "any_current_supply_of_n95_masks", "any_current_supply_of_surgical_masks", "any_current_supply_of_gowns", "any_current_supply_of_gloves", "any_current_supply_of_hand_sanitizer")
## Select the threshold which will be used to nursing homes in a state-county eligible to be considered for shortage (this threshold has been manually selected from the histogram we have produced below)
threshold <- c(40, 40, 40, 40, 40, 40)
for (i in 1:length(col_names)) {
## Find total number of nursing homes for each state-county
state_nursing_home_count <- covid_df %>%
group_by(provider_state, county) %>%
summarise(count = n_distinct(federal_provider_number)) %>%
drop_na()
## Filter and get all nursing homes with shortage in a week
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "N")
## Groupby to get the number of nursing homes having a shortage in a state-county in a week
shortage_week_df <- shortage_week_df %>%
group_by(provider_state, county, week_ending) %>%
summarise(count = n()) %>%
drop_na()
## Merge the above 2 dataframe and find the % of nursing homes with shortage in a state in a week
merged_df <- merge(shortage_week_df, state_nursing_home_count, by = c("provider_state", "county"))
merged_df$Percentage <- (merged_df$count.x / merged_df$count.y) * 100
## Plot the histogram
# hist(merged_df$Percentage, main = paste("Plot for",col_names[i]), xlab = "Percentage", ylab="Frequency of shotage weeks")
## Filter and get the data of only those states in which has a certain (above set threshold) % of nursing homes with shortage. For eg. in county AK-Anchorage, in week 2020-05-24, the % of N.H. having shortage is 100%, and since the threshold is 50% for "any_current_supply_of_eye_protection", we will consider this week as shortage or the county AK-Anchorage.
merged_df <- merged_df[(merged_df$Percentage >= threshold[i]), ]
merged_df1 <- merged_df %>%
group_by(provider_state, county) %>%
summarise(count_of_weeks = n())
## find counties having shortage of nursing staff for more than 10 weeks
answer <- merged_df1[(merged_df1$count_of_weeks > 10), ]
answer <- answer[order(answer$count_of_weeks, decreasing = TRUE), ]
colnames(answer) <- c("Provider_State", "County", paste("Count_of_weeks_with_shortage_of", col_names[i], sep = "_"))
print(head(answer, 5))
}
covid_df <- df_covid_nursing[, c("week_ending", "federal_provider_number", "provider_name", "provider_state", "county", "any_current_supply_of_ventilator_supplies")]
col_names <- c("any_current_supply_of_ventilator_supplies")
for (i in 1:length(col_names)) {
shortage_week_df <- subset(covid_df, covid_df[col_names[i]] == "N")
shortage_week_df <- shortage_week_df %>%
group_by(federal_provider_number, provider_name) %>%
summarise(number_of_shortage_weeks = n()) %>%
drop_na()
## find counties having shortage of ventilator supplies for more than 10 weeks
answer <- shortage_week_df[(shortage_week_df$number_of_shortage_weeks > 10), ]
answer <- answer[order(answer$number_of_shortage_weeks, decreasing = TRUE), ]
print(head(answer, 5))
}
setwd("E:/IE-5374-Foundations Data Analytics/HW-Group-19/IE-5374-HW-Group-19/Homework-3")
gc()
gc()
knitr::opts_chunk$set(echo = TRUE)
p1_data <- [3.79, 2.99, 2.45, 2.14, 3.36, 2.05, 3.14, 3.54,2.77, 2.91, 3.10, 1.84, 2.52, 3.22, 2.67, 2.52, 2.71, 2.75, 3.57, 3.85, 2.89, 2.83, 3.13, 2.44, 2.10, 3.71, 2.37,2.68, 3.51, 3.37]
p1_data <- c(3.79, 2.99, 2.45, 2.14, 3.36, 2.05, 3.14, 3.54,2.77, 2.91, 3.10, 1.84, 2.52, 3.22, 2.67, 2.52, 2.71, 2.75, 3.57, 3.85, 2.89, 2.83, 3.13, 2.44, 2.10, 3.71, 2.37,2.68, 3.51, 3.37)
p1_mean <- sum(p1_data) / length(p1_data)
p1_mean
p1_var <- ((p1_data - p1_mean) ^ 2) / length(p1_data)
p1_var
p1_var <- sum(p1_var)
p1_var <- sum(p1_var)
p1_sd <- p1_var ^ 0.5
p1_sd
hist(p1_data)
help(hist)
hist(p1_data)
hist(p1_data)
stem(p1_data)
stem(p1_data,scale=0.5)
stem(p1_data,scale=2)
boxplot(p1_data)
answer_p3
answer_p3 <- 1
for (i in 305:365) {
answer_p3 <- answer_p3 * i
}
answer_p3
answer_p3 <- 1
for (i in 3056:365) {
answer_p3 <- answer_p3 * i
}
answer_p3
answer_p3 <- 1
for (i in 3056:365) {
answer_p3 <- answer_p3 * i
}
answer_p3
answer_p3 <- 1
for (i in 306:365) {
answer_p3 <- answer_p3 * i
}
answer_p3
p4_a
prob_tax_free <- 0.6
prob_mutual_funds <- 0.3
prob_both <- 0.15
p4_a <- prob_tax_free + prob_mutual_funds - prob_both
p4_a
p4_b <- 1 - p4_a
knitr::opts_chunk$set(echo = TRUE)
# Assigning probability values to variables
# Probability of Canadian license plate - A
p_a <- 0.12
# Probability of camper - B
p_b <- 0.28
# Probability of both (Intersection)
p_a_int_b <- 0.09
p6_a <- p_a / p_b
p6_a
p6_a <- p_a_int_b / p_b
# Therefore, probability of P(A | B) (Given that a camper entered cavern, What is the probability that he has Canadian license plates)
p6_a <- p_a_int_b / p_b
p6_a
# Similary, P(B | A)
p6_b <- p_a_int_b / p_a
p6_b
# Probability that a vehicle does NOT have Canadian plates or is NOT a camper will be 1 - Probability of both ( intersection )
p6_c <- 1 - p_a_int_b
p6_c
